/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : PROXY
 #	author : miyako
 #	2018/01/07
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

pxProxyFactory *pf = NULL;

bool IsProcessOnExit()
{
	C_TEXT name;
	PA_long32 state, time;
	PA_GetProcessInfo(PA_GetCurrentProcessNumber(), name, &state, &time);
	CUTF16String procName(name.getUTF16StringPtr());
	CUTF16String exitProcName((PA_Unichar *)"$\0x\0x\0\0\0");
	return (!procName.compare(exitProcName));
}

void OnStartup()
{
	pf = px_proxy_factory_new();
}

void OnCloseProcess()
{
	if(IsProcessOnExit())
	{
		if(pf)
		{
			px_proxy_factory_free(pf);
			pf = NULL;
		}
	}
}

#pragma mark -

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
		case kInitPlugin :
		case kServerInitPlugin :
			OnStartup();
			break;
			
		case kCloseProcess :
			OnCloseProcess();
			break;
			// --- PROXY

		case 1 :
			GET_PROXIES(pResult, pParams);
			break;

	}
}

// ------------------------------------- PROXY ------------------------------------


void GET_PROXIES(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_TEXT Param1;
	ARRAY_TEXT Param2;

	Param1.fromParamAtIndex(pParams, 1);

	if(pf)
	{
		CUTF8String url;
		Param1.copyUTF8String(&url);
		
		char **proxies = px_proxy_factory_get_proxies(pf, (const char *)url.c_str());
		
		if(proxies)
		{
			Param2.setSize(1);
		
			for (unsigned int i = 0; proxies[i]; ++i)
			{
				Param2.appendUTF8String((const uint8_t *)proxies[i], strlen(proxies[i]));
			}
			
			px_proxy_factory_free_proxies(proxies);
		}
		
	}
	
	Param2.toParamAtIndex(pParams, 2);
}

